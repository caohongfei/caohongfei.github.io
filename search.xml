<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Swift中`is`操作符在数组上的使用]]></title>
      <url>http://caohongfei.github.io/2015/11/02/swift-type-system-is/</url>
      <content type="html"><![CDATA[<h1 id="1">1</h1><p>Swift的数组类型与数组的<code>Element</code>类型之间是Covariant的关系。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>: <span class="title">CustomStringConvertible</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> name: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.name = name</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> description: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>: <span class="title">Animal</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">useAnimalArray</span><span class="params">(array: Array&lt;Animal&gt;)</span></span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(array)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cats = [<span class="type">Cat</span>(<span class="string">"Tom"</span>), <span class="type">Cat</span>(<span class="string">"Jack"</span>)]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"'cats' has a type of <span class="subst">\(cats.<span class="keyword">dynamicType</span>)</span>"</span>)</span><br><span class="line">useAnimalArray(cats)</span><br></pre></td></tr></table></figure></p>
<p>执行结果：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;cats&#39; has a type of Array&#60;Cat&#62;&#10;[Tom, Jack]</span><br></pre></td></tr></table></figure></p>
<p>上例中，<code>cats</code>的类型是    <code>Array&lt;Cat&gt;</code>，因为<code>Cat</code>是<code>Animal</code>的子类，所以<code>Array&lt;Cat&gt;</code>也就是<code>Array&lt;Animal&gt;</code>的子类。这就是为什么<code>useAnimalArray(cats)</code>可以工作的原因。这种Covariant关系是Swift语言内置的，是完全符合逻辑的。</p>
<h1 id="2">2</h1><p>有趣的地方在于，Swift的<code>is</code>操作符对于数组会采取逐个元素动态判断的方式。它既不是根据编译时数组的类型来决定，也不使用数组变量的<code>dynamicType</code>值。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>: <span class="title">CustomStringConvertible</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> name: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.name = name</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> description: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>: <span class="title">Animal</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> animals = [<span class="type">Animal</span>]()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"1. Is empty 'animals' an array of Cat?"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"   <span class="subst">\(animals <span class="keyword">is</span> [Cat])</span>, <span class="subst">\(animals.<span class="keyword">dynamicType</span>)</span>"</span>)</span><br><span class="line">animals.append(<span class="type">Cat</span>(<span class="string">"Tom"</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"2. Is 'animals' with a cat an array of Cat?"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"   <span class="subst">\(animals <span class="keyword">is</span> [Cat])</span>, <span class="subst">\(animals.<span class="keyword">dynamicType</span>)</span>"</span>)</span><br><span class="line">animals.append(<span class="type">Animal</span>(<span class="string">"Beast"</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"3. Is 'animals' with a cat and a beast an array of Cat?"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"   <span class="subst">\(animals <span class="keyword">is</span> [Cat])</span>, <span class="subst">\(animals.<span class="keyword">dynamicType</span>)</span>"</span>)</span><br></pre></td></tr></table></figure></p>
<p>执行结果：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. Is empty &#39;animals&#39; an array of Cat?&#10;   true, Array&#60;Animal&#62;&#10;2. Is &#39;animals&#39; with a cat an array of Cat?&#10;   true, Array&#60;Animal&#62;&#10;3. Is &#39;animals&#39; with a cat and a beast an array of Cat?&#10;   false, Array&#60;Animal&#62;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
  
  
</search>
